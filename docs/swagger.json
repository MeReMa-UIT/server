{
    "swagger": "2.0",
    "info": {
        "description": "API for medical records management app",
        "title": "MeReMa Server API",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/accounts": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API for admin to get account list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get account list (admin)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AccountInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/accounts/login": {
            "post": {
                "description": "API for user to login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/accounts/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API for user to get account info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get account info",
                "responses": {
                    "200": {
                        "description": "account_info: models.AccountInfo, additional_info: []models.PatientBriefInfo or models.StaffInfo",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update account information such as citizen ID, phone, email, or password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Update Account Info",
                "parameters": [
                    {
                        "description": "Account information to update",
                        "name": "AccountInfoUpdateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AccountInfoUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/accounts/recovery": {
            "post": {
                "description": "Send recovery email to user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get important info to send recovery email",
                "parameters": [
                    {
                        "description": "Recovery credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AccountRecoverRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/accounts/recovery/reset": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Reset password after OTP verification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Reset password",
                "parameters": [
                    {
                        "description": "Password reset request",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PasswordResetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/accounts/recovery/verify": {
            "post": {
                "description": "Confirm recovery OTP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Confirm recovery OTP",
                "parameters": [
                    {
                        "description": "Recovery OTP",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AccountRecoverConfirmRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AccountRecoverConfirmResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/accounts/register": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Check whether the citizen ID is already registered",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Initiate registration (admin, receptionist)",
                "parameters": [
                    {
                        "description": "Initiate registration data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InitRegistrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AccountRegistrationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/accounts/register/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Register new account (admin, receptionist)",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AccountRegistrationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.AccountRegistrationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/accounts/register/patients": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new patient account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Register new patient (receptionist)",
                "parameters": [
                    {
                        "description": "Patient registration data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PatientRegistrationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/accounts/register/staffs": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new staff account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Register new staff (admin)",
                "parameters": [
                    {
                        "description": "Staff registration data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StaffRegistrationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/catalog/diagnoses": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of diagnoses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catalogs"
                ],
                "summary": "Get Diagnosis List (doctor)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DiagnosisInfo"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/catalog/diagnoses/{icd_code}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get info of a diagnosis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catalogs"
                ],
                "summary": "Get Diagnosis Info (doctor, patient)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ICD Code",
                        "name": "icd_code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DiagnosisInfo"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/catalog/medications": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of medications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catalogs"
                ],
                "summary": "Get Medication List (doctor)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.MedicationInfo"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/catalog/medications/{medication_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get info of a medication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catalogs"
                ],
                "summary": "Get Medication Info (doctor, patient)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Medication ID",
                        "name": "medication_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MedicationInfo"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/catalog/record-types": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of medical record types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catalogs"
                ],
                "summary": "Get Medical Record Type List (doctor)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.MedicalRecordType"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/catalog/record-types/{type_id}/template": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a medical record template by type ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catalogs"
                ],
                "summary": "Get Medical Record Template (doctor)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Medical Record Type ID  (01BV1, 02BV1, ...)",
                        "name": "type_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/comms/contacts": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get contact list for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "communications"
                ],
                "summary": "Get contact list (doctor, patient)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ContactInfo"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/comms/messages": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Send message to a doctor or patient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "communications"
                ],
                "summary": "Send message (patient, doctor)",
                "parameters": [
                    {
                        "description": "Message to send",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SendingMessage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/comms/messages/{contact_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Load conversation with a doctor or patient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "communications"
                ],
                "summary": "Load conversation (patient, doctor)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contact ID",
                        "name": "contact_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Message"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/patients": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get patient list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "patients"
                ],
                "summary": "Get patient list (receptionist, doctor)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PatientBriefInfo"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/patients/{patient_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get patient info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "patients"
                ],
                "summary": "Get patient info (receptionist, doctor, patient)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Patient ID",
                        "name": "patient_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PatientInfo"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update patient info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "patients"
                ],
                "summary": "Update patient info (doctor, receptionist)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Patient ID",
                        "name": "patient_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Patient Info Update Request",
                        "name": "patient_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PatientInfoUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/prescriptions": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new prescription for a patient record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prescriptions"
                ],
                "summary": "Add New Prescription (doctor)",
                "parameters": [
                    {
                        "description": "Add New Prescription Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NewPrescriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/prescriptions/patients/{patient_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get prescription list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prescriptions"
                ],
                "summary": "Get prescription list with patient ID (doctor, patient)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Patient ID",
                        "name": "patient_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PrescriptionInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/prescriptions/records/{record_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get prescription list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prescriptions"
                ],
                "summary": "Get prescription list with medical record ID (doctor, patient)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Medical Record ID",
                        "name": "record_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PrescriptionInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/prescriptions/{prescription_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get prescription details by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prescriptions"
                ],
                "summary": "Get prescription details (doctor, patient)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Prescription ID",
                        "name": "prescription_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PrescriptionDetailInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update prescription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prescriptions"
                ],
                "summary": "Update prescription (doctor)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Prescription ID",
                        "name": "prescription_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Prescription Update Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PrescriptionUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/prescriptions/{prescription_id}/confirm": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Confirm that the prescription has been received",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prescriptions"
                ],
                "summary": "Confirm receiving prescription (doctor)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Prescription ID",
                        "name": "prescription_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/prescriptions/{prescription_id}/details": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new detail to the prescription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prescriptions"
                ],
                "summary": "Add prescription detail (doctor)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Prescription ID",
                        "name": "prescription_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Prescription Detail Adding request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PrescriptionDetail"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/prescriptions/{prescription_id}/{detail_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a detail from the prescription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prescriptions"
                ],
                "summary": "Delete prescription detail (doctor)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Prescription ID",
                        "name": "prescription_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Detail ID",
                        "name": "detail_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/records": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of medical records for a patient or all records for a doctor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "records"
                ],
                "summary": "Get record list (doctor, patient)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.MedicalRecordBriefInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new record for a patient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "records"
                ],
                "summary": "Add a new record (doctor)",
                "parameters": [
                    {
                        "description": "New Medical Record Request",
                        "name": "NewMedicalRecordRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NewMedicalRecordRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.NewMedicalRecordResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/records/{recordID}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about a specific medical record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "records"
                ],
                "summary": "Get record info (doctor, patient)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Record ID",
                        "name": "recordID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MedicalRecordInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/records/{recordID}/attachments": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all attachments of a specific medical record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/zip"
                ],
                "tags": [
                    "records"
                ],
                "summary": "Get record attachments (doctor, patient)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Record ID",
                        "name": "recordID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ZIP file containing all record's attachments",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/records/{record_id}/attachments": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add attachments to an existing record",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "records"
                ],
                "summary": "Add attachments to a record (doctor)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Record ID",
                        "name": "record_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Attachments, support 5 types of prefix: xray_, ct_, ultrasound_, test_, other_. Ex: xray_1.jpg",
                        "name": "attachments",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/schedules": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Schedule List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedules"
                ],
                "summary": "Get Schedule List (patient, receptionist)",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "description": "Type of examination (1: Regular, 2: Service). Ex: ?type[]=1\u0026type[]=2",
                        "name": "type[]",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "description": "Status of the schedule (1: Waiting, 2: Completed, 3: Cancelled. Ex: ?status[]=1\u0026status[]=2",
                        "name": "status[]",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ScheduleInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/schedules/book": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Book Examination Schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedules"
                ],
                "summary": "Book Examination Schedule (patient)",
                "parameters": [
                    {
                        "description": "Schedule Booking Request",
                        "name": "schedule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ScheduleBookingRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ScheduleBookingResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/schedules/update-status": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update schedule status from waiting to completed or cancelled",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedules"
                ],
                "summary": "Update schedule status (receptionist)",
                "parameters": [
                    {
                        "description": "Update schedule status request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateScheduleStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/staffs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get staff list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staffs"
                ],
                "summary": "Get staff list (admin)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.StaffInfo"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/staffs/{staff_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get staff info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staffs"
                ],
                "summary": "Get staff info (primary for admin; doctor, receptionist will only get their own info for whichever staff_id they set)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Staff ID",
                        "name": "staff_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StaffInfo"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update staff information by staff ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staffs"
                ],
                "summary": "Update staff info (admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Staff ID",
                        "name": "staff_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Staff info update request",
                        "name": "StaffInfoUpdateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StaffInfoUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AccountInfo": {
            "type": "object",
            "properties": {
                "acc_id": {
                    "type": "integer"
                },
                "citizen_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "models.AccountInfoUpdateRequest": {
            "type": "object",
            "properties": {
                "field": {
                    "description": "\"password\", \"email\", \"phone\", \"citizen_id\" are possible choices",
                    "type": "string"
                },
                "new_value": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.AccountRecoverConfirmRequest": {
            "type": "object",
            "properties": {
                "citizen_id": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                }
            }
        },
        "models.AccountRecoverConfirmResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "models.AccountRecoverRequest": {
            "type": "object",
            "properties": {
                "citizen_id": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "models.AccountRegistrationRequest": {
            "type": "object",
            "properties": {
                "citizen_id": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "models.AccountRegistrationResponse": {
            "type": "object",
            "properties": {
                "acc_id": {
                    "description": "Account ID (-1 means account is not registered yet)",
                    "type": "integer"
                },
                "token": {
                    "description": "JWT token. If acc ID = -1, token will allow user to register new account, otherwise token will allow user to add new patient or staff",
                    "type": "string"
                }
            }
        },
        "models.ContactInfo": {
            "type": "object",
            "properties": {
                "acc_id": {
                    "type": "integer"
                },
                "full_name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "models.DiagnosisInfo": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "icd_code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.InitRegistrationRequest": {
            "type": "object",
            "properties": {
                "citizen_id": {
                    "type": "string"
                }
            }
        },
        "models.LoginRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "models.MedicalRecordBriefInfo": {
            "type": "object",
            "properties": {
                "doctor_id": {
                    "type": "integer"
                },
                "patient_id": {
                    "type": "integer"
                },
                "primary_diagnosis": {
                    "type": "string"
                },
                "record_id": {
                    "type": "integer"
                },
                "secondary_diagnosis": {
                    "type": "string"
                },
                "type_id": {
                    "type": "string"
                }
            }
        },
        "models.MedicalRecordInfo": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "doctor_id": {
                    "type": "integer"
                },
                "expired_at": {
                    "type": "string"
                },
                "patient_id": {
                    "type": "integer"
                },
                "record_detail": {
                    "type": "object"
                },
                "record_id": {
                    "type": "integer"
                },
                "type_id": {
                    "type": "string"
                }
            }
        },
        "models.MedicalRecordType": {
            "type": "object",
            "properties": {
                "type_id": {
                    "type": "string"
                },
                "type_name": {
                    "type": "string"
                }
            }
        },
        "models.MedicationInfo": {
            "type": "object",
            "properties": {
                "generic_name": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "med_id": {
                    "type": "integer"
                },
                "med_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "route_of_administration": {
                    "type": "string"
                },
                "strength": {
                    "type": "string"
                }
            }
        },
        "models.Message": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "sender_id": {
                    "type": "integer"
                },
                "sent_at": {
                    "type": "string"
                }
            }
        },
        "models.NewMedicalRecordRequest": {
            "type": "object",
            "properties": {
                "patient_id": {
                    "type": "integer"
                },
                "record_detail": {
                    "type": "object"
                },
                "type_id": {
                    "type": "string"
                }
            }
        },
        "models.NewMedicalRecordResponse": {
            "type": "object",
            "properties": {
                "record_id": {
                    "type": "integer"
                }
            }
        },
        "models.NewPrescriptionRequest": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PrescriptionDetail"
                    }
                },
                "is_insurance_covered": {
                    "type": "boolean"
                },
                "prescription_note": {
                    "type": "string"
                },
                "record_id": {
                    "type": "integer"
                }
            }
        },
        "models.PasswordResetRequest": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string"
                }
            }
        },
        "models.PatientBriefInfo": {
            "type": "object",
            "properties": {
                "date_of_birth": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "patient_id": {
                    "type": "integer"
                }
            }
        },
        "models.PatientInfo": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "emergency_contact_info": {
                    "type": "string"
                },
                "ethnicity": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "health_insurance_expired_date": {
                    "type": "string"
                },
                "health_insurance_number": {
                    "type": "string"
                },
                "nationality": {
                    "type": "string"
                },
                "patient_id": {
                    "type": "integer"
                }
            }
        },
        "models.PatientInfoUpdateRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "emergency_contact_info": {
                    "type": "string"
                },
                "ethnicity": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "health_insurance_expired_date": {
                    "type": "string"
                },
                "health_insurance_number": {
                    "type": "string"
                },
                "nationality": {
                    "type": "string"
                }
            }
        },
        "models.PatientRegistrationRequest": {
            "type": "object",
            "properties": {
                "acc_id": {
                    "type": "integer"
                },
                "address": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "emergency_contact_info": {
                    "type": "string"
                },
                "ethnicity": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "health_insurance_expired_date": {
                    "type": "string"
                },
                "health_insurance_number": {
                    "type": "string"
                },
                "nationality": {
                    "type": "string"
                }
            }
        },
        "models.PrescriptionDetail": {
            "type": "object",
            "properties": {
                "afternoon_dosage": {
                    "type": "number"
                },
                "dosage_unit": {
                    "type": "string"
                },
                "duration_days": {
                    "type": "integer"
                },
                "evening_dosage": {
                    "type": "number"
                },
                "instructions": {
                    "type": "string"
                },
                "med_id": {
                    "type": "integer"
                },
                "morning_dosage": {
                    "type": "number"
                },
                "total_dosage": {
                    "type": "number"
                }
            }
        },
        "models.PrescriptionDetailInfo": {
            "type": "object",
            "properties": {
                "afternoon_dosage": {
                    "type": "number"
                },
                "detail_id": {
                    "type": "integer"
                },
                "dosage_unit": {
                    "type": "string"
                },
                "duration_days": {
                    "type": "integer"
                },
                "evening_dosage": {
                    "type": "number"
                },
                "instructions": {
                    "type": "string"
                },
                "med_id": {
                    "type": "integer"
                },
                "morning_dosage": {
                    "type": "number"
                },
                "total_dosage": {
                    "type": "number"
                }
            }
        },
        "models.PrescriptionInfo": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "is_insurance_covered": {
                    "type": "boolean"
                },
                "prescription_id": {
                    "type": "integer"
                },
                "prescription_note": {
                    "type": "string"
                },
                "received_at": {
                    "type": "string"
                },
                "record_id": {
                    "type": "integer"
                }
            }
        },
        "models.PrescriptionUpdateRequest": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PrescriptionDetail"
                    }
                },
                "is_insurance_covered": {
                    "type": "boolean"
                },
                "prescription_note": {
                    "type": "string"
                }
            }
        },
        "models.ScheduleBookingRequest": {
            "type": "object",
            "properties": {
                "examination_date": {
                    "type": "string"
                },
                "type": {
                    "description": "Type of examination (1: Regular, 2: Service)",
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ]
                }
            }
        },
        "models.ScheduleBookingResponse": {
            "type": "object",
            "properties": {
                "examination_date": {
                    "type": "string"
                },
                "expected_reception_time": {
                    "type": "string"
                },
                "queue_number": {
                    "type": "integer"
                },
                "status": {
                    "description": "Status of the schedule (1: Waiting, 2: Completed, 3: Cancelled)",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3
                    ]
                },
                "type": {
                    "description": "Type of examination (1: Regular, 2: Service)",
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ]
                }
            }
        },
        "models.ScheduleInfo": {
            "type": "object",
            "properties": {
                "examination_date": {
                    "type": "string"
                },
                "expected_reception_time": {
                    "type": "string"
                },
                "queue_number": {
                    "type": "integer"
                },
                "schedule_id": {
                    "type": "integer"
                },
                "status": {
                    "description": "Status of the schedule (1: Waiting, 2: Completed, 3: Cancelled)",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3
                    ]
                },
                "type": {
                    "description": "Type of examination (1: Regular, 2: Service)",
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ]
                }
            }
        },
        "models.SendingMessage": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "to_acc_id": {
                    "type": "integer"
                }
            }
        },
        "models.StaffInfo": {
            "type": "object",
            "properties": {
                "date_of_birth": {
                    "type": "string"
                },
                "department": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "staff_id": {
                    "type": "integer"
                }
            }
        },
        "models.StaffInfoUpdateRequest": {
            "type": "object",
            "properties": {
                "date_of_birth": {
                    "type": "string"
                },
                "department": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                }
            }
        },
        "models.StaffRegistrationRequest": {
            "type": "object",
            "properties": {
                "acc_id": {
                    "type": "integer"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "department": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                }
            }
        },
        "models.UpdateScheduleStatusRequest": {
            "type": "object",
            "properties": {
                "new_status": {
                    "description": "New status of the schedule (1: Waiting, 2: Completed, 3: Cancelled)",
                    "type": "integer"
                },
                "reception_time": {
                    "type": "string"
                },
                "schedule_id": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Provide the JWT token as a header with format \"Bearer \\\u003ctoken\\\u003e\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}