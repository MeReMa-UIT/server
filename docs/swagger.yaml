basePath: /api/v1
definitions:
  models.AccountRecoverConfirmRequest:
    properties:
      citizen_id:
        type: string
      otp:
        type: string
    type: object
  models.AccountRecoverConfirmResponse:
    properties:
      token:
        type: string
    type: object
  models.AccountRecoverRequest:
    properties:
      citizen_id:
        type: string
      email:
        type: string
    type: object
  models.AccountRegistrationRequest:
    properties:
      email:
        type: string
      phone:
        type: string
      role:
        type: string
    type: object
  models.AccountRegistrationResponse:
    properties:
      token:
        type: string
    type: object
  models.InitRegistrationRequest:
    properties:
      citizen_id:
        type: string
    type: object
  models.InitRegistrationResponse:
    properties:
      acc_id:
        description: Account ID (-1 means account is not registered yet)
        type: integer
      token:
        description: JWT token, if acc ID = -1, jwt contains citizen ID to register
          new account, otherwise it contains acc ID
        type: string
    type: object
  models.LoginRequest:
    properties:
      id:
        type: string
      password:
        type: string
    type: object
  models.LoginResponse:
    properties:
      token:
        type: string
    type: object
  models.PasswordResetRequest:
    properties:
      new_password:
        type: string
    type: object
  models.PatientRegistrationRequest:
    properties:
      address:
        type: string
      date_of_birth:
        type: string
      emergency_contact_info:
        type: string
      ethnicity:
        type: string
      full_name:
        type: string
      gender:
        type: string
      health_insurance_expired_date:
        type: string
      health_insurance_number:
        type: string
      nationality:
        type: string
    type: object
  models.StaffRegistrationRequest:
    properties:
      date_of_birth:
        type: string
      department:
        type: string
      full_name:
        type: string
      gender:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for medical records management app
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: MeReMa Server API
  version: "1.0"
paths:
  /accounts/login:
    post:
      consumes:
      - application/json
      description: API for user to login
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Login
      tags:
      - accounts
  /accounts/recovery:
    post:
      consumes:
      - application/json
      description: Send recovery email to user
      parameters:
      - description: Recovery credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.AccountRecoverRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Get important info to send recovery email
      tags:
      - accounts
  /accounts/recovery/confirm:
    post:
      consumes:
      - application/json
      description: Confirm recovery OTP
      parameters:
      - description: Recovery OTP
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.AccountRecoverConfirmRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AccountRecoverConfirmResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Confirm recovery OTP
      tags:
      - accounts
  /accounts/recovery/reset:
    put:
      consumes:
      - application/json
      description: Reset password after OTP verification
      parameters:
      - description: Password reset request
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.PasswordResetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Reset password
      tags:
      - accounts
  /accounts/register:
    post:
      consumes:
      - application/json
      description: Initiate registration
      parameters:
      - description: Initiate registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.InitRegistrationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.InitRegistrationResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Check whether the citizen ID is already registered
      tags:
      - accounts
  /accounts/register/create:
    post:
      consumes:
      - application/json
      description: Create a new account
      parameters:
      - description: 'Format: Bearer {token}'
        in: header
        name: Authentication:Bearer
        required: true
        type: string
      - description: User registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.AccountRegistrationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.AccountRegistrationResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Register new account
      tags:
      - accounts
  /accounts/register/patients:
    post:
      consumes:
      - application/json
      description: Create a new patient account
      parameters:
      - description: Patient registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.PatientRegistrationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Register new patient
      tags:
      - accounts
  /accounts/register/staffs:
    post:
      consumes:
      - application/json
      description: Create a new staff account
      parameters:
      - description: Staff registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.StaffRegistrationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Register new staff
      tags:
      - accounts
securityDefinitions:
  BearerAuth:
    description: 'Provide the JWT token as a header with format "Authorization: Bearer
      \<token\>"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
